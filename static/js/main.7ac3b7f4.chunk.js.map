{"version":3,"sources":["resume.svg","Components/Header.js","Components/TogglePreview.js","Components/Cv-components/PersonalInfoSubComponents/Name.js","Components/Cv-components/PersonalInfoSubComponents/Role.js","Components/Cv-components/PersonalInfoSubComponents/locationIcon.svg","Components/Cv-components/PersonalInfoSubComponents/mobile-phone.svg","Components/Cv-components/PersonalInfoSubComponents/email2.svg","Components/Cv-components/PersonalInfoSubComponents/linkedin.svg","Components/Cv-components/PersonalInfoSubComponents/Contact.js","Components/Cv-components/PersonalInfoSubComponents/AboutMe.js","Components/Cv-components/Personal-info.js","Components/Cv-components/workExperienceSubComponents/Responsibilities.js","Components/Cv-components/workExperienceSubComponents/NewExperienceForm.js","Modules/DeleteInfo.js","Components/Cv-components/workExperienceSubComponents/EditWork.js","Components/Cv-components/workExperienceSubComponents/SavedWorkExperience.js","Components/Cv-components/Work-experience.js","Components/Cv-components/educationSubComponents/NewEducationForm.js","Components/Cv-components/educationSubComponents/EditEducation.js","Components/Cv-components/educationSubComponents/SavedEducation.js","Components/Cv-components/Education.js","Components/Cv-components/skillsSubComponents/NewSkillsForm.js","Components/Cv-components/skillsSubComponents/EditSkill.js","Components/Cv-components/skillsSubComponents/SavedSkills.js","Components/Cv-components/Skills.js","Components/Cv.js","github.svg","App.js","reportWebVitals.js","index.js"],"names":["Header","className","id","src","Icon","alt","TogglePreview","viewStatus","setViewStatus","type","onClick","Name","isEditable","handleEditChange","useState","text","pos","names","setNames","map","name","action","onSubmit","e","preventDefault","value","onChange","targ","target","obj2","handleChange","select","Role","role","setRole","handleRoleChange","Contact","icon","LocationIcon","PhoneIcon","EmailIcon","LinkedIcon","contactInfo","setContactInfo","list","filter","item","splice","console","log","AboutMe","setIsEditable","about","setAbout","rows","cols","wrap","handleAboutChange","PersonalInfo","Responsibilities","workObject","setWorkObject","responsibilities","length","respId","setRespId","htmlFor","resp","placeholder","obj","newResponsibility","NewExperienceForm","handleSubmit","positionTitle","company","companyCity","fromDate","toDate","deleteInfo","userInfo","setUserInfo","setPos","newInfo","ids","forEach","info","EditWork","cleanResp","classList","contains","SavedWorkExperience","work","responsibility","WorkExperience","emptyWorkObject","workobj","position","push","NewEducationForm","formState","degree","schoolName","city","description","EditEducation","setFormState","SavedEducation","key","school","Education","emptyFormObject","NewSkillsForm","newSkill","EditSkill","skill","setSkill","SavedSkills","Skills","emptySkill","setNewSkill","dataset","Cv","App","href","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ac3b7f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/resume.d8bafcef.svg\";","import Icon from \"../resume.svg\";\nconst Header = () => {\n  return (\n    <header className=\"main-header\">\n      <img id=\"main-icon\" src={Icon} alt=\"\" />\n      <h1 id=\"page-title\">CV Generator</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","const TogglePreview = ({ viewStatus, setViewStatus }) => {\n  return (\n    <div className=\"togglePreview\">\n      <button\n        type=\"button\"\n        className={viewStatus === \"edit\" ? \"active\" : \"\"}\n        onClick={() => setViewStatus(\"edit\")}\n      >\n        Edit\n      </button>\n      <button\n        type=\"button\"\n        className={viewStatus === \"preview\" ? \"active\" : \"\"}\n        onClick={() => setViewStatus(\"preview\")}\n      >\n        Preview\n      </button>\n    </div>\n  );\n};\n\nexport default TogglePreview;\n","import { useState } from \"react\";\n\nconst Name = ({ viewStatus, isEditable, handleEditChange }) => {\n  const [names, setNames] = useState([\n    { text: \"First Name\", pos: \"0\", id: \"firstName\" },\n    { text: \"Last Name\", pos: \"1\", id: \"lastName\" },\n  ]);\n  const handleChange = (e) => {\n    const targ = e.target;\n    const obj2 = [...names];\n    obj2[targ.id].text = targ.value;\n    setNames(obj2);\n  };\n\n  return (\n    <div className=\"name\">\n      {names.map((name) => {\n        if (isEditable !== name.id) {\n          return (\n            <h1\n              key={name.id}\n              pos={name.pos}\n              onClick={() => {\n                if (viewStatus === \"edit\") handleEditChange(name.id);\n              }}\n            >\n              {name.text}\n            </h1>\n          );\n        } else {\n          return (\n            <form\n              className=\"nameForm\"\n              action=\"\"\n              key={name.id}\n              onSubmit={(e) => {\n                e.preventDefault();\n                handleEditChange();\n              }}\n            >\n              <input\n                type=\"text\"\n                value={name.text}\n                id={name.pos}\n                name={name.id}\n                onChange={(e) => handleChange(e)}\n                onClick={(e) => e.target.select()}\n              />\n            </form>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Name;\n","import { useState } from \"react\";\nconst Role = ({viewStatus, isEditable, handleEditChange }) => {\n  const [role, setRole] = useState({\n    role: \"Current Role\",\n    id: \"currentRole\",\n  });\n\n  const handleRoleChange = (e) => {\n    setRole({\n      ...role,\n      role: e.target.value,\n    });\n  };\n  \n\n  return isEditable !== role.id ? (\n    <div onClick={() => {\n      if (viewStatus === \"edit\") handleEditChange(role.id)\n      }} className=\"role\">\n      {role.role}\n    </div>\n  ) : (\n    <form\n      className=\"role-form\"\n      action=\"\"\n      key={role.id}\n      id=\"role\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleEditChange();\n      }}\n    >\n      <input type=\"text\" \n      name={role.id}\n      value={role.role}\n      onChange={(e) => handleRoleChange(e)}/>\n    </form>\n  );\n};\n\nexport default Role;\n","export default __webpack_public_path__ + \"static/media/locationIcon.0c0840fc.svg\";","export default __webpack_public_path__ + \"static/media/mobile-phone.3fec5e39.svg\";","export default __webpack_public_path__ + \"static/media/email2.b8a16cad.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.7defd339.svg\";","import { useState } from \"react\";\nimport LocationIcon from \"./locationIcon.svg\";\nimport PhoneIcon from \"./mobile-phone.svg\";\nimport EmailIcon from \"./email2.svg\";\nimport LinkedIcon from \"./linkedin.svg\";\n\nconst Contact = ({ viewStatus, handleEditChange, isEditable}) => {\n  const [contactInfo, setContactInfo] = useState([\n    { text: \"address 1\", icon: LocationIcon, pos: 0, id: \"address1\" },\n    { text: \"address 2\", icon: LocationIcon, pos: 1, id: \"address2\" },\n    { text: \"phone\", icon: PhoneIcon, pos: 2, id: \"phone\" },\n    { text: \"email\", icon: EmailIcon, pos: 3, id: \"email\" },\n    { text: \"LinkedIn\", icon: LinkedIcon, pos: 4, id: \"linkedIn\" },\n  ]);\n\n  const handleChange = (e)=>{\n   const list = contactInfo.filter(item=> item.id !== e.target.name)\n   const target = contactInfo.filter(item =>item.id === e.target.name)\n   target[0].text = e.target.value\n   list.splice(target[0].pos, 0, target[0])\n   console.log(list)\n   setContactInfo(list)\n  }\n  return (\n    <div className=\"contact\">\n      {contactInfo.map((item) => {\n        if (isEditable !== item.id) {\n          return (\n            <div key={item.id} className=\"contactItem\">\n              <div\n                onClick={() => {\n                  if (viewStatus === \"edit\") handleEditChange(item.id);\n                }}\n                name={item.id}\n                className=\"contactItemName\"\n              >\n                {item.text}\n              </div>\n              <img src={item.icon} alt=\"\" />\n            </div>\n          );\n        } else {\n          return (\n            <div key = {item.id} className=\"contactItem\">\n              <form\n                action=\"\"\n                onSubmit={(e) => {\n                  e.preventDefault();\n                  handleEditChange();\n                }}\n              >\n                <input\n                  name={item.id}\n                  type=\"text\"\n                  value={item.text}\n                  onChange={handleChange}\n                  onClick = {(e)=>e.target.select()}\n                />\n              </form>\n              <img src={item.icon} alt=\"\" />\n            </div>\n          );\n        }\n      })}\n    </div>\n  );\n};\n\nexport default Contact;\n","import { useState } from \"react\";\nconst AboutMe = ({ viewStatus, isEditable, setIsEditable }) => {\n  const [about, setAbout] = useState({\n    about:\n      \"About me: Click on any text on the cv template to edit, or click a button to add a new block of information about yourself to the document.\",\n  });\n  const handleAboutChange = (e) => {\n    setAbout({\n      ...about,\n      about: e.target.value,\n    });\n  };\n  return isEditable !== \"about\" ? (\n    <div\n      className=\"aboutMe\"\n      onClick={() => {\n        if (viewStatus === \"edit\") setIsEditable(\"about\");\n      }}\n    >\n      {about.about}\n    </div>\n  ) : (\n    <form\n      action=\"\"\n      className=\"aboutMe-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        setIsEditable(false);\n      }}\n    >\n      <textarea\n        name=\"text\"\n        rows=\"5\"\n        cols=\"40\"\n        wrap=\"soft\"\n        type=\"text\"\n        value={about.about}\n        onChange={(e) => handleAboutChange(e)}\n      ></textarea>\n      <button type=\"submit\">save</button>\n    </form>\n  );\n};\n\nexport default AboutMe;\n","import Name from \"./PersonalInfoSubComponents/Name\";\nimport Role from \"./PersonalInfoSubComponents/Role\";\nimport Contact from \"./PersonalInfoSubComponents/Contact\";\nimport AboutMe from \"./PersonalInfoSubComponents/AboutMe\";\n\nconst PersonalInfo = ({\n  viewStatus,\n  isEditable,\n  setIsEditable,\n  handleEditChange,\n}) => {\n  return (\n    <div className={\"personal-info \" + viewStatus}>\n      <div className=\"primaryInfo\">\n        <Name\n          isEditable={isEditable}\n          handleEditChange={handleEditChange}\n          viewStatus={viewStatus}\n        ></Name>\n        <Role\n          isEditable={isEditable}\n          handleEditChange={handleEditChange}\n          viewStatus={viewStatus}\n        ></Role>\n        <AboutMe\n          isEditable={isEditable}\n          setIsEditable={setIsEditable}\n          viewStatus={viewStatus}\n        ></AboutMe>\n      </div>\n      <Contact\n        viewStatus={viewStatus}\n        isEditable={isEditable}\n        handleEditChange={handleEditChange}\n      ></Contact>\n    </div>\n  );\n};\nexport default PersonalInfo;\n","import { useState } from \"react\";\nconst Responsibilities = ({ workObject, setWorkObject, handleChange }) => {\n  const [respId, setRespId] = useState(workObject.responsibilities.length);\n  const newResponsibility = () => {\n    const obj = { ...workObject };\n    obj.responsibilities[respId] = { text: \"\", id: respId };\n    setWorkObject(obj);\n    setRespId(respId + 1);\n  };\n\n  return (\n    <div className=\"responsibilities\">\n      <label htmlFor=\"responsibilities\">Responsibilities:</label>\n      {workObject.responsibilities.map((resp) => {\n        return (\n          <input\n            key={resp.id}\n            onChange={(e) => handleChange(e)}\n            value={resp.text}\n            name={resp.id}\n            placeholder=\"\"\n            type=\"text\"\n            className=\"responsibility\"\n            onClick={(e) => e.target.select()}\n          />\n        );\n      })}\n      <button\n        className=\"addResponsibility\"\n        type=\"button\"\n        onClick={(e) => {\n          e.preventDefault();\n          newResponsibility();\n        }}\n      >\n        + Responsibility\n      </button>\n    </div>\n  );\n};\n\nexport default Responsibilities;\n","import Responsibilities from \"./Responsibilities\";\nconst NewExperienceForm = ({\n  handleChange,\n  workObject,\n  handleSubmit,\n  isEditable,\n  setIsEditable,\n  setWorkObject,\n}) => {\n  return isEditable !== \"work\" ? null : (\n    <div className=\"work-experience-form\">\n      <form\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <label htmlFor=\"positionTitle\">Position/Title:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.positionTitle}\n          name=\"positionTitle\"\n          type=\"text\"\n          className=\"positionTitle\"\n          onClick={(e) => e.target.select()}\n        />\n        <label htmlFor=\"company\">Company name: </label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.company}\n          name=\"company\"\n          type=\"text\"\n          className=\"company\"\n          onClick={(e) => e.target.select()}\n        />\n        <label htmlFor=\"companyCity\">City/State:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.companyCity}\n          name=\"companyCity\"\n          placeholder=\"Washington, D.C.\"\n          type=\"text\"\n          className=\"companyCity\"\n          onClick={(e) => e.target.select()}\n        />\n        <label htmlFor=\"fromDate\">From:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.fromDate}\n          name=\"fromDate\"\n          placeholder=\"MONTH 20XX\"\n          type=\"text\"\n          className=\"fromDate\"\n          onClick={(e) => e.target.select()}\n        />\n        <label htmlFor=\"toDate\">To:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.toDate}\n          name=\"toDate\"\n          placeholder=\"MONTH 20XX\"\n          type=\"text\"\n          className=\"toDate\"\n          onClick={(e) => e.target.select()}\n        />\n\n        <Responsibilities\n          workObject={workObject}\n          setWorkObject={setWorkObject}\n          handleChange={handleChange}\n        ></Responsibilities>\n\n        <div className=\"formButtons\">\n          <button\n            type=\"reset\"\n            onClick={() => {\n              setIsEditable(false);\n            }}\n          >\n            Cancel\n          </button>\n          <button type=\"submit\">Add work experience</button>\n        </div>\n      </form>\n    </div>\n  );\n};\nexport default NewExperienceForm;\n","const deleteInfo = (userInfo, setUserInfo, setPos, id) => {\n  console.log(userInfo);\n  console.log(id);\n  const newInfo = userInfo.filter((obj) => obj.id !== id);\n  console.log(newInfo);\n  let ids = 0;\n  if (newInfo.length < 1) {\n    setUserInfo(false);\n    setPos(0);\n  } else {\n    newInfo.forEach((info) => {\n      info.id = ids;\n      ids++;\n    });\n    setUserInfo(newInfo);\n    setPos(newInfo.length);\n  }\n};\n\nexport { deleteInfo };\n","import { useState } from \"react\";\nimport Responsibilities from \"./Responsibilities\";\nimport { deleteInfo } from \"../../../Modules/DeleteInfo\";\nconst EditWork = ({\n  userInfo,\n  setUserInfo,\n  id,\n  setIsEditable,\n  cleanResp,\n  setPos,\n}) => {\n  const [workObject, setWorkObject] = useState(userInfo[id]);\n\n  const handleChange = (e) => {\n    const obj = { ...workObject };\n    const targ = e.target;\n    if (targ.classList.contains(\"responsibility\")) {\n      obj.responsibilities[targ.name].text = targ.value;\n      obj.responsibilities[targ.name].id = targ.name;\n    } else {\n      obj[targ.name] = targ.value;\n    }\n    setWorkObject(obj);\n  };\n  const handleSubmit = () => {\n    cleanResp(workObject);\n    userInfo[id] = workObject;\n    setIsEditable(false);\n  };\n  return (\n    <div className=\"work-experience-form\">\n      <form\n        action=\"\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleSubmit();\n        }}\n      >\n        <label htmlFor=\"positionTitle\">Position/Title:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.positionTitle}\n          name=\"positionTitle\"\n          type=\"text\"\n          className=\"positionTitle\"\n        />\n        <label htmlFor=\"company\">Company name: </label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.company}\n          name=\"company\"\n          type=\"text\"\n          className=\"company\"\n        />\n        <label htmlFor=\"companyCity\">City/State:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.companyCity}\n          name=\"companyCity\"\n          placeholder=\"Washington, D.C.\"\n          type=\"text\"\n          className=\"companyCity\"\n        />\n        <label htmlFor=\"fromDate\">From:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.fromDate}\n          name=\"fromDate\"\n          placeholder=\"mm/dd/yyyy\"\n          type=\"text\"\n          className=\"fromDate\"\n        />\n        <label htmlFor=\"toDate\">To:</label>\n        <input\n          onChange={(e) => handleChange(e)}\n          value={workObject.toDate}\n          name=\"toDate\"\n          placeholder=\"mm/dd/yyyy\"\n          type=\"text\"\n          className=\"toDate\"\n        />\n\n        <Responsibilities\n          workObject={workObject}\n          setWorkObject={setWorkObject}\n          handleChange={handleChange}\n        ></Responsibilities>\n        <div className=\"formButtons\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsEditable(false);\n            }}\n          >\n            Cancel\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => {\n              setIsEditable(false);\n              deleteInfo(userInfo, setUserInfo, setPos, id);\n            }}\n          >\n            Delete\n          </button>\n          <button type=\"submit\">Save changes</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default EditWork;\n","import EditWork from \"./EditWork\";\n\nconst SavedWorkExperience = ({\n  viewStatus,\n  userInfo,\n  setUserInfo,\n  isEditable,\n  setIsEditable,\n  cleanResp,\n  setPos,\n}) => {\n  return !userInfo ? null : (\n    <div className=\"work-experience saved\">\n      {userInfo.map((work) => {\n        return isEditable === work.id ? (\n          <EditWork\n            cleanResp={cleanResp}\n            userInfo={userInfo}\n            setUserInfo={setUserInfo}\n            id={work.id}\n            setIsEditable={setIsEditable}\n            setPos={setPos}\n          ></EditWork>\n        ) : (\n          <div\n            className=\"companyInfo\"\n            key={work.id}\n            onClick={() => {\n              if (viewStatus === \"edit\") setIsEditable(work.id);\n            }}\n          >\n            <h3 className=\"companyPositionTitle\">{work.positionTitle}</h3>\n            <div className=\"placeOfWork\">\n              <h4 className=\"companyName\">{work.company}</h4>\n              <p className=\"companyCity\"> - {work.companyCity}</p>\n            </div>\n            <p className=\"companyDates\">\n              {work.fromDate} - {work.toDate}\n            </p>\n\n            <ul>\n              {work.responsibilities.map((responsibility) => {\n                return (\n                  <li\n                    className=\"responsibility\"\n                    id={\"responsibility\" + responsibility.id}\n                    key={responsibility.id}\n                  >\n                    {responsibility.text}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SavedWorkExperience;\n","import { useState } from \"react\";\nimport NewExperienceForm from \"./workExperienceSubComponents/NewExperienceForm\";\nimport SavedWorkExperience from \"./workExperienceSubComponents/SavedWorkExperience\";\n\nconst WorkExperience = ({ viewStatus }) => {\n  const emptyWorkObject = {\n    company: \"\",\n    companyCity: \"\",\n    fromDate: \"\",\n    toDate: \"\",\n    positionTitle: \"\",\n    responsibilities: [\n      { text: \"\", id: \"0\" },\n      { text: \"\", id: \"1\" },\n    ],\n    id: \"\",\n  };\n  const sampleWorkObject = {\n    positionTitle: \"Click me to edit\",\n    company: \"Company\",\n    companyCity: \"City, State\",\n    fromDate: \"MONTH 20XX\",\n    toDate: \"PRESENT\",\n    responsibilities: [\n      {\n        text: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n        id: \"0\",\n      },\n      { text: \"Aenean ac interdum nisi. Sed in consequat mi.\", id: \"1\" },\n    ],\n    id: \"0\",\n  };\n  const [userInfo, setUserInfo] = useState([sampleWorkObject]);\n  const [pos, setPos] = useState(1);\n  const [isEditable, setIsEditable] = useState(false);\n  const handleEditChange = (id) => {\n    if (id && isEditable !== id) {\n      setIsEditable(id);\n    } else {\n      setIsEditable(false);\n    }\n  };\n\n  const [workObject, setWorkObject] = useState(emptyWorkObject);\n\n  const handleChange = (e) => {\n    const obj = { ...workObject };\n    const targ = e.target;\n    if (targ.classList.contains(\"responsibility\")) {\n      obj.responsibilities[targ.name].text = targ.value;\n      obj.responsibilities[targ.name].id = targ.name;\n    } else {\n      obj[targ.name] = targ.value;\n    }\n    setWorkObject(obj);\n  };\n  const cleanResp = (workobj) => {\n    let position = 0;\n    const resp = workobj.responsibilities.filter((resp) => resp.text !== \"\");\n    resp.forEach((resp) => {\n      resp.id = position;\n      position++;\n    });\n    workobj.responsibilities = resp;\n  };\n  const handleSubmit = (e) => {\n    workObject.id = pos;\n    cleanResp(workObject);\n    if (!userInfo) {\n      setUserInfo([workObject]);\n    } else {\n      userInfo.push(workObject);\n    }\n    setWorkObject(emptyWorkObject);\n    setPos(pos + 1);\n    setIsEditable(false);\n  };\n\n  return (\n    <div className={\"work-experience \" + viewStatus}>\n      <h2>WORK EXPERIENCE</h2>\n      <SavedWorkExperience\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        cleanResp={cleanResp}\n        setPos={setPos}\n        viewStatus={viewStatus}\n      ></SavedWorkExperience>\n      <NewExperienceForm\n        isEditable={isEditable}\n        handleChange={handleChange}\n        workObject={workObject}\n        handleSubmit={handleSubmit}\n        setIsEditable={setIsEditable}\n        setWorkObject={setWorkObject}\n      ></NewExperienceForm>\n      <button onClick={() => handleEditChange(\"work\")}>\n        + Work Experience\n      </button>\n    </div>\n  );\n};\n\nexport default WorkExperience;\n","const NewEducationForm = ({\n  isEditable,\n  formState,\n  handleChange,\n  handleSubmit,\n  setIsEditable,\n}) => {\n  return isEditable !== \"education\" ? null : (\n    <form\n      action=\"\"\n      className=\"educationForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <label htmlFor=\"degree\">Degree, certification or title:</label>\n      <input\n        type=\"text\"\n        name=\"degree\"\n        value={formState.degree}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"educaitonName\">School or Institution:</label>\n      <input\n        type=\"text\"\n        name=\"schoolName\"\n        value={formState.schoolName}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"city\">City:</label>\n      <input\n        type=\"text\"\n        name=\"city\"\n        value={formState.city}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"fromDate\">From: </label>\n      <input\n        type=\"text\"\n        name=\"fromDate\"\n        value={formState.fromDate}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"toDate\">To:</label>\n      <input\n        type=\"text\"\n        name=\"toDate\"\n        value={formState.toDate}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"description\">Description or other information:</label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        value={formState.description}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <div className=\"buttons\">\n        <button type=\"button\" onClick={() => setIsEditable(false)}>\n          Cancel\n        </button>\n        <button type=\"submit\">Add school</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewEducationForm;\n","import { useState } from \"react\";\nimport { deleteInfo } from \"../../../Modules/DeleteInfo\";\n\nconst EditEducation = ({\n  userInfo,\n  setUserInfo,\n  setPos,\n  id,\n  setIsEditable,\n}) => {\n  const [formState, setFormState] = useState(userInfo[id]);\n  const handleChange = (e) => {\n    const targ = e.target;\n    setFormState({\n      ...formState,\n      [targ.name]: targ.value,\n    });\n  };\n  const handleSubmit = () => {\n    userInfo[id] = formState;\n    setIsEditable(false);\n  };\n  return (\n    <form\n      action=\"\"\n      className=\"educationForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <label htmlFor=\"degree\">Degree, certification or title:</label>\n      <input\n        type=\"text\"\n        name=\"degree\"\n        value={formState.degree}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"educaitonName\">School or Institution:</label>\n      <input\n        type=\"text\"\n        name=\"schoolName\"\n        value={formState.schoolName}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"city\">City:</label>\n      <input\n        type=\"text\"\n        name=\"city\"\n        value={formState.city}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"fromDate\">From: </label>\n      <input\n        type=\"text\"\n        name=\"fromDate\"\n        value={formState.fromDate}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <label htmlFor=\"toDate\">To:</label>\n      <input\n        type=\"text\"\n        name=\"toDate\"\n        value={formState.toDate}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n\n      <label htmlFor=\"description\">Description or other information:</label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        value={formState.description}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <div className=\"buttons\">\n        <button type=\"button\" onClick={() => setIsEditable(false)}>\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setIsEditable(false);\n            deleteInfo(userInfo, setUserInfo, setPos, id);\n          }}\n        >\n          Delete\n        </button>\n        <button type=\"submit\">Save changes</button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditEducation;\n","import EditEducation from \"./EditEducation\";\nconst SavedEducation = ({\n  userInfo,\n  setUserInfo,\n  isEditable,\n  setIsEditable,\n  setPos,\n  viewStatus\n}) => {\n  let key = 0;\n  return !userInfo ? null : (\n    <div className=\"userEducation\">\n      {userInfo.map((school) => {\n        key++;\n        return isEditable === school.id ? (\n          <EditEducation\n            userInfo={userInfo}\n            setUserInfo={setUserInfo}\n            id={school.id}\n            setIsEditable={setIsEditable}\n            setPos={setPos}\n          ></EditEducation>\n        ) : (\n          <div\n            className=\"schoolObject\"\n            key={key}\n            onClick={() => {\n              if (viewStatus === \"edit\") setIsEditable(school.id);\n            }}\n          >\n            <h3 className=\"degree\">{school.degree}</h3>\n            <div className=\"schoolInfo\">\n              <h4 className=\"schoolName\">{school.schoolName}</h4>\n              <div className=\"schoolCity\"> -{school.city} </div>\n            </div>\n\n            <div className=\"dates\">\n              {school.fromDate} - {school.toDate}\n            </div>\n\n            <p className=\"description\">{school.description}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SavedEducation;\n","import { useState } from \"react\";\nimport NewEducationForm from \"./educationSubComponents/NewEducationForm\";\nimport SavedEducation from \"./educationSubComponents/SavedEducation\";\n\nconst Education = ({ viewStatus }) => {\n  const emptyFormObject = {\n    schoolName: \"\",\n    city: \"\",\n    fromDate: \"\",\n    toDate: \"\",\n    degree: \"\",\n    description: \"\",\n    id: \"\",\n  };\n  const sampleEducationObject = {\n    schoolName: \"School Name\",\n    city: \"City, State\",\n    fromDate: \"MONTH 20XX\",\n    toDate: \"MONTH 20XX\",\n    degree: \"Click to Edit\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore.\",\n    id: \"0\",\n  };\n  const [isEditable, setIsEditable] = useState(false);\n  const [pos, setPos] = useState(1);\n\n  const handleEditChange = (id) => {\n    if (id && isEditable !== id) {\n      setIsEditable(id);\n    } else {\n      setIsEditable(false);\n    }\n  };\n  const [userInfo, setUserInfo] = useState([sampleEducationObject]);\n\n  const [formState, setFormState] = useState(emptyFormObject);\n  const handleChange = (e) => {\n    const targ = e.target;\n    setFormState({\n      ...formState,\n      [targ.name]: targ.value,\n    });\n  };\n  const handleSubmit = () => {\n    formState.id = pos;\n    setPos(pos + 1);\n    if (!userInfo) {\n      setUserInfo([formState]);\n    } else {\n      userInfo.push(formState);\n    }\n    setFormState(emptyFormObject);\n    setIsEditable(false);\n  };\n  return (\n    <div className={\"education \" + viewStatus}>\n      <h2>Education</h2>\n      <SavedEducation\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        setPos={setPos}\n        viewStatus={viewStatus}\n      ></SavedEducation>\n      <NewEducationForm\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        formState={formState}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n      ></NewEducationForm>\n      <button\n        className=\"editEducation\"\n        onClick={() => handleEditChange(\"education\")}\n      >\n        + Education\n      </button>\n    </div>\n  );\n};\n\nexport default Education;\n","const NewSkillsForm = ({\n  viewStatus,\n  newSkill,\n  handleChange,\n  handleSubmit,\n  pos,\n  setPos,\n}) => {\n  return viewStatus !== \"edit\" ? null : (\n    <form\n      action=\"\"\n      className=\"newSkill\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (newSkill.text === \"\") {\n        } else {\n          handleSubmit();\n          setPos(pos + 1);\n        }\n      }}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"add a new skill...\"\n        value={newSkill.text}\n        id={newSkill.id}\n        data-pos={pos}\n        onChange={(e) => {\n          handleChange(e);\n        }}\n      />\n      <button type=\"submit\">+</button>\n    </form>\n  );\n};\nexport default NewSkillsForm;\n","import { useState } from \"react\";\nimport { deleteInfo } from \"../../../Modules/DeleteInfo\";\nconst EditSkill = ({ userInfo, setUserInfo, setIsEditable, setPos, id }) => {\n  const [skill, setSkill] = useState(userInfo[id]);\n\n  const handleChange = (value) => {\n    setSkill({\n      ...skill,\n      text: value,\n    });\n  };\n  const handleSubmit = () => {\n    userInfo[id] = skill;\n    setIsEditable(false);\n  };\n\n  return (\n    <form\n      action=\"\"\n      className=\"editSkill\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit();\n      }}\n    >\n      <input\n        type=\"text\"\n        value={skill.text}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            deleteInfo(userInfo, setUserInfo, setPos, id);\n            setIsEditable(false);\n          }}\n        >\n          del\n        </button>\n\n        <button type=\"button\" onClick={() => setIsEditable(false)}>\n          cancel\n        </button>\n\n        <button type=\"submit\">&#10003;</button>\n      </div>\n    </form>\n  );\n};\n\nexport default EditSkill;\n","import EditSkill from \"./EditSkill\";\nconst SavedSkills = ({\n  viewStatus,\n  userInfo,\n  setUserInfo,\n  isEditable,\n  setIsEditable,\n  setPos,\n}) => {\n  return !userInfo ? null : (\n    <div className=\"skillsContainer\">\n      {userInfo.map((skill) => {\n        return isEditable === skill.id ? (\n          <EditSkill\n            userInfo={userInfo}\n            setUserInfo={setUserInfo}\n            setIsEditable={setIsEditable}\n            setPos={setPos}\n            id={skill.id}\n          ></EditSkill>\n        ) : (\n          <div\n            className=\"skill\"\n            key={skill.id}\n            onClick={() => {\n              if (viewStatus === \"edit\") setIsEditable(skill.id);\n            }}\n          >\n            {skill.text}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default SavedSkills;\n","import { useState } from \"react\";\nimport NewSkillsForm from \"./skillsSubComponents/NewSkillsForm\";\nimport SavedSkills from \"./skillsSubComponents/SavedSkills\";\n\nconst Skills = ({ viewStatus }) => {\n  const emptySkill = { text: \"\", id: \"\" };\n  const sampleSkill = { text: \"Add a skill, or click me to edit\", id: \"0\" };\n  const [userInfo, setUserInfo] = useState([sampleSkill]);\n\n  const [newSkill, setNewSkill] = useState(emptySkill);\n  const [pos, setPos] = useState(1);\n  const [isEditable, setIsEditable] = useState(false);\n\n  const handleChange = (e) => {\n    setNewSkill({\n      ...newSkill,\n      text: e.target.value,\n      id: e.target.dataset.pos,\n    });\n  };\n  const handleSubmit = () => {\n    if (!userInfo) {\n      setUserInfo([newSkill]);\n    } else {\n      userInfo.push(newSkill);\n    }\n    setNewSkill(emptySkill);\n  };\n\n  return (\n    <div className={\"skills \" + viewStatus}>\n      <h2>Skills</h2>\n      <SavedSkills\n        userInfo={userInfo}\n        setUserInfo={setUserInfo}\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        setPos={setPos}\n        viewStatus={viewStatus}\n      ></SavedSkills>\n      <NewSkillsForm\n        newSkill={newSkill}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        pos={pos}\n        setPos={setPos}\n        viewStatus={viewStatus}\n      ></NewSkillsForm>\n    </div>\n  );\n};\n\nexport default Skills;\n","import { useState } from \"react\";\nimport PersonalInfo from \"./Cv-components/Personal-info\";\nimport WorkExperience from \"./Cv-components/Work-experience\";\nimport Education from \"./Cv-components/Education\";\nimport Skills from \"./Cv-components/Skills\";\nconst Cv = ({ viewStatus }) => {\n  const [isEditable, setIsEditable] = useState(false);\n  const handleEditChange = (id) => {\n    if (id && isEditable !== id) {\n      setIsEditable(id);\n    } else {\n      setIsEditable(false);\n    }\n  };\n  return (\n    <div className=\"cv-body\">\n      <PersonalInfo\n        handleEditChange={handleEditChange}\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        viewStatus={viewStatus}\n      ></PersonalInfo>\n      <Skills\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        handleEditChange={handleEditChange}\n        viewStatus={viewStatus}\n      ></Skills>\n      <WorkExperience\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        handleEditChange={handleEditChange}\n        viewStatus={viewStatus}\n      ></WorkExperience>\n      <Education\n        isEditable={isEditable}\n        setIsEditable={setIsEditable}\n        handleEditChange={handleEditChange}\n        viewStatus={viewStatus}\n      ></Education>\n    </div>\n  );\n};\n\nexport default Cv;\n","export default __webpack_public_path__ + \"static/media/github.df941249.svg\";","import { useState } from \"react\";\nimport Header from \"./Components/Header\";\nimport TogglePreview from \"./Components/TogglePreview\";\nimport Cv from \"./Components/Cv\";\nimport Icon from \"./github.svg\";\nfunction App() {\n  const [viewStatus, setViewStatus] = useState(\"edit\");\n\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <div className=\"cvContainer\">\n        <TogglePreview\n          viewStatus={viewStatus}\n          setViewStatus={setViewStatus}\n        ></TogglePreview>\n        <Cv viewStatus={viewStatus}></Cv>\n      </div>\n      <footer>\n        <a\n          id=\"copyright\"\n          href=\"https://github.com/enPlace/react-inline-editable-cv\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Copyright © 2021 enPlace\n          <img id=\"githubIcon\" src={Icon} alt=\"\" />\n        </a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}